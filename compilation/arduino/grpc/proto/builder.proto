//
// This file is part of Arduino Builder.
//
// Arduino Builder is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 2 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
//
// As a special exception, you may use this file as part of a free software
// library without restriction.  Specifically, if other files instantiate
// templates or use macros or inline functions from this file, or you compile
// this file and link it with other files to produce an executable, this
// file does not by itself cause the resulting executable to be covered by
// the GNU General Public License.  This exception does not however
// invalidate any other reasons why the executable file might be covered by
// the GNU General Public License.
//
// Copyright 2020 Arduino LLC (http://www.arduino.cc/)
//
// compile me with: protoc -I proto/ proto/builder.proto  --go_out=plugins=grpc:proto

syntax = "proto3";

option java_multiple_files = true;
option java_package = "cc.arduino.builder";
option java_outer_classname = "BuilderProto";

package proto;

// Interface exported by the server.
service Builder {

  // A server-to-client streaming RPC.
  //
  // Obtains the Features available within the given Rectangle.  Results are
  // streamed rather than returned at once (e.g. in a response message with a
  // repeated field), as the rectangle may cover a large area and contain a
  // huge number of features.
  rpc Build(BuildParams) returns (stream Response) {}

  rpc Autocomplete(BuildParams) returns (Response) {}

  rpc DropCache(VerboseParams) returns (Response) {}
}

message BuildParams {
  string hardwareFolders = 1;
  string toolsFolders = 2;
  string builtInLibrariesFolders = 3;
  string otherLibrariesFolders = 4;
  string sketchLocation = 5;
  string fQBN = 6;
  string arduinoAPIVersion = 7;
  string customBuildProperties = 8;
  string buildCachePath = 9;
  string buildPath = 10;
  string warningsLevel = 11;
  string codeCompleteAt = 12;
  bool verbose = 13;
}

message VerboseParams {
  bool verbose = 1;
}

message Response {
  string line = 1;
}
